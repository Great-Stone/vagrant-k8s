IMAGE_NAME = "bento/ubuntu-18.04"

cluster = {
  "master" => { :count => 1, :ip_post => 100, :cpus => 2, :mem => 2048 },
  "node" => { :count => 1, :ip_post => 110, :cpus => 4, :mem => 4096 }
}

Vagrant.configure("2") do |config|

  config.vm.define "master", primary: true do |master|
    master.vm.box = IMAGE_NAME
    master.vm.network "private_network", name: "vboxnet1", ip: "172.28.128.#{cluster['master'][:ip_post]}"
    master.vm.hostname = "master"
    master.vm.provision "kube", type: "shell", privileged: true, path: "provisioning/scripts/kube.sh"
    master.vm.provision "kube_init", type: "shell", preserve_order: true, privileged: true, path: "provisioning/scripts/kube_init.sh"
    master.vm.provision "shell-1", type: "shell", privileged: true, inline: <<-SHELL
    echo 'Environment="KUBELET_EXTRA_ARGS=--node-ip=172.28.128.#{cluster['master'][:ip_post]}"' >> /etc/default/kubelet
    sudo systemctl daemon-reload
    sudo systemctl restart kubelet
    SHELL
    master.vm.provision "helm_install", type: "shell", preserve_order: true, privileged: true, path: "provisioning/scripts/helm_install.sh"
    master.vm.provision "files", type: "file", preserve_order: true, source: "provisioning/files", destination: "/tmp"
    master.vm.provision "license", type: "file", preserve_order: true, source: "provisioning/license", destination: "/tmp"
    master.vm.provision "debugservice", type: "shell", preserve_order: true, privileged: true, path: "provisioning/scripts/debugservice.sh"
    master.vm.provision "consul_install", type: "shell", preserve_order: true, privileged: true, run: "never", path: "provisioning/scripts/consul_install.sh"

    master.vm.provider "virtualbox" do |v|
      v.name = "k8s-server"
      v.gui = false
      v.memory = cluster['master'][:mem]
      v.cpus = cluster['master'][:cpus]

      v.customize ["modifyvm", :id, "--vram", "9"]
    end # end provider
  end

  (1..cluster['node'][:count]).each do |i|
    config.vm.define "node-#{i}" do |node|
        node.vm.box = IMAGE_NAME
        node.vm.network "private_network", name: "vboxnet1", ip: "172.28.128.#{i + cluster['node'][:ip_post]}"
        node.vm.hostname = "node-#{i}"
        node.vm.provision "kube", type: "shell", privileged: true, path: "provisioning/scripts/kube.sh"
        node.vm.provision "shell-1", type: "shell", privileged: true, inline: <<-SHELL
        sudo /vagrant/join.sh
        sudo systemctl daemon-reload
        sudo systemctl restart kubelet
        SHELL
        node.vm.provision "shell-2", type: "shell", privileged: true, inline: <<-SHELL
        echo 'Environment="KUBELET_EXTRA_ARGS=--node-ip=172.28.128.#{i + cluster['node'][:ip_post]}"' >> /etc/default/kubelet
        sudo systemctl daemon-reload
        sudo systemctl restart kubelet
        SHELL
        node.vm.provider "virtualbox" do |v|
          v.name = "k8s-node-#{i}"
          v.gui = false
          v.memory = cluster['node'][:mem]
          v.cpus = cluster['node'][:cpus]
    
          v.customize ["modifyvm", :id, "--vram", "9"]
        end # end provider
    end
  end
end
